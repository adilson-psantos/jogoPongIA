let bolaImg, raqueteJogadorImg, raqueteComputadorImg; // Variáveis para armazenar as imagens
let bola;
let velocidadeBolaX, velocidadeBolaY;
let larguraRaquete = 10, alturaRaquete = 80;
let espessuraBarra = 5;
let posicaoJogadorY, posicaoComputadorY;
let pontosJogador = 0;
let pontosComputador = 0;
let fundo; // Variável para armazenar a imagem de fundo

function setup() {
    createCanvas(800, 400);
    fundo = loadImage('assets/fundo2.png'); // Carregar imagem de fundo
    bolaImg = loadImage('assets/bola.png'); // Carregar a imagem da bola
    raqueteJogadorImg = loadImage('assets/barra01.png'); // Carregar a imagem da raquete do jogador
    raqueteComputadorImg = loadImage('assets/barra02.png'); // Carregar a imagem da raquete do computador
    resetarBola();
    posicaoJogadorY = height / 2 - alturaRaquete / 2;
    posicaoComputadorY = height / 2 - alturaRaquete / 2;
}

function draw() {
    imageMode(CORNER); // Desenhar a imagem de fundo a partir do canto superior esquerdo
    image(fundo, 0, 0, width, height); // Desenhar a imagem de fundo
    desenharBarras(); // Barras superior e inferior
    desenharBola(); // Desenhar a bola
    desenharRaquetes(); // Desenhar raquetes
    moverBola(); // Movimentação da bola
    moverRaqueteComputador(); // IA do computador
    verificarColisoes(); // Verificar colisões

    // Movimentação da raquete do jogador controlada pelo mouse
    posicaoJogadorY = constrain(mouseY - alturaRaquete / 2, 0, height - alturaRaquete);

    // Exibir pontuação
    textSize(32);
    fill(255);
    textAlign(CENTER, TOP);
    text(pontosJogador, width / 4, 20);
    text(pontosComputador, (width / 4) * 3, 20);
}

function resetarBola() {
    bola = createVector(width / 2, height / 2);
    velocidadeBolaX = random([-5, 5]);
    velocidadeBolaY = random(-3, 3);
}

function desenharBarras() {
    fill(color('#2b3fd6')); // Cor azul para as barras
    noStroke(); // Remover bordas das barras

    // Barra superior
    rect(0, 0, width, espessuraBarra, 5);

    // Barra inferior
    rect(0, height - espessuraBarra, width, espessuraBarra, 5);
}

function desenharBola() {
    // Desenhar a imagem da bola na posição correta
    imageMode(CENTER);
    image(bolaImg, bola.x, bola.y, 20, 20); // Manter tamanho da bola em 20x20 pixels
}

function desenharRaquetes() {
    // Desenhar a raquete do jogador usando a imagem
    imageMode(CORNER); // Desenhar as raquetes a partir do canto superior esquerdo
    image(raqueteJogadorImg, 30, posicaoJogadorY, larguraRaquete, alturaRaquete); // Manter as dimensões

    // Desenhar a raquete do computador usando a imagem
    image(raqueteComputadorImg, width - 40, posicaoComputadorY, larguraRaquete, alturaRaquete); // Manter as dimensões
}

function moverBola() {
    bola.x += velocidadeBolaX;
    bola.y += velocidadeBolaY;

    // Colisão da bola com as barras superior e inferior
    if (bola.y < espessuraBarra || bola.y > height - espessuraBarra) {
        velocidadeBolaY *= -1;
    }

    // Verificar se a bola sai pela esquerda (ponto para o computador)
    if (bola.x < 0) {
        pontosComputador++;
        resetarBola();
    }

    // Verificar se a bola sai pela direita (ponto para o jogador)
    if (bola.x > width) {
        pontosJogador++;
        resetarBola();
    }
}

function verificarColisoes() {
    // Verificar colisão com a raquete do jogador
    if (
        bola.x - 10 < 40 && // Ajustar para considerar o raio da bola
        bola.y > posicaoJogadorY && 
        bola.y < posicaoJogadorY + alturaRaquete
    ) {
        velocidadeBolaX *= -1;
        alterarVelocidadeBola(); // Alterar velocidade após colisão

        let diferencaY = bola.y - (posicaoJogadorY + alturaRaquete / 2);
        velocidadeBolaY = diferencaY * 0.2;

        bola.x = 40 + 10; // Ajustar para fora da raquete
    }

    // Verificar colisão com a raquete do computador
    if (
        bola.x + 10 > width - 50 && 
        bola.y > posicaoComputadorY && 
        bola.y < posicaoComputadorY + alturaRaquete
    ) {
        velocidadeBolaX *= -1;
        alterarVelocidadeBola(); // Alterar velocidade após colisão

        let diferencaY = bola.y - (posicaoComputadorY + alturaRaquete / 2);
        velocidadeBolaY = diferencaY * 0.2;

        bola.x = width - 50 - 10; // Ajustar para fora da raquete
    }
}

function moverRaqueteComputador() {
    let velocidadeComputador = 3;
    if (bola.y < posicaoComputadorY + alturaRaquete / 2 - 10) {
        posicaoComputadorY -= velocidadeComputador;
    } else if (bola.y > posicaoComputadorY + alturaRaquete / 2 + 10) {
        posicaoComputadorY += velocidadeComputador;
    }

    posicaoComputadorY = constrain(posicaoComputadorY, 0, height - alturaRaquete);
}

function alterarVelocidadeBola() {
    let incrementoVelocidade = random(0.5, 1.5);
    velocidadeBolaX = velocidadeBolaX < 0 ? -incrementoVelocidade : incrementoVelocidade;
    velocidadeBolaY = random(-3, 3);
}
